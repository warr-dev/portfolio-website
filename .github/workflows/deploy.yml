# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # build:

  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       node-version: [20.x]
  #       # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'npm'
  #   - run: npm ci
  #   - run: npm run build
  #   #- run: npm test
  build:
    runs-on: ubuntu-latest
    outputs:
      build-dir: dist
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build
        id: build
        env:
          CI: true

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist


  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Download build artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: build
  #     - name: list file
  #       run: ls

  #     - name: Deploy to production
  #       uses: easingthemes/ssh-deploy@v2
  #       with:
  #         REMOTE_HOST: ${{ secrets.DEPLOY_SERVER }}
  #         REMOTE_USER: ${{ secrets.DEPLOY_USER }}
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #         # SOURCE:  .
  #         TARGET: ${{ secrets.DEPLOY_DIR }}
  #         REMOTE_PORT: ${{ secrets.DEPLOY_PORT }}